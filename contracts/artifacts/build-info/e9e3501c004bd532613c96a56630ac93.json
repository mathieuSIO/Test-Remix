{
	"id": "e9e3501c004bd532613c96a56630ac93",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/test.sol": {
				"content": "pragma solidity 0.8.7;\r\n\r\n//Les structures sont un peu comme des objets\r\n\r\n//Vidéo Projet : Un wallet simple\r\ncontract test {\r\n\r\n    //Que doit faire notre wallet?\r\n    // -> Permettre d'avoir plusieurs adresse\r\n    // -> Permettre d'envoyer de l'argent sur le contrat qui appartient à l'adresse \r\n    // -> Permettre de retirer de l'argent sur le contrat qui appartient à l'adresse \r\n\r\n    // -- 1 --\r\n    //Je commence par défini la structure de mes wallets (ça correpondrai\r\n    struct wallet {\r\n        uint montant;\r\n        uint nbDePayement; //Facultatif  \r\n    }\r\n\r\n    // -- 2 --\r\n    //On permet qu'il y ait plusieurs wallet sur notre contrat\r\n    mapping (address => wallet) Wallets;\r\n\r\n    // -- 3 --\r\n    //On veut que notre contrat puisse recevoir des transactions\r\n    receive() external payable {\r\n        Wallets[msg.sender].montant += msg.value;\r\n        Wallets[msg.sender].nbDePayement++;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //Correction Ben BK\r\n\r\n    // struct wallet {\r\n    //     uint balance;\r\n    //     uint nbPayements;\r\n    // }\r\n\r\n    // mapping (address => wallet) Wallets;\r\n\r\n    // function getTotalMontant() public view returns(uint){\r\n    //     return address(this).balance;\r\n    // }\r\n\r\n    // function getMontant() public view returns(uint){\r\n    //     return Wallets[msg.sender].balance;\r\n    // }\r\n\r\n    // function withdrawAllMoney(address payable _to) public  {\r\n    //     uint _amount = Wallets[msg.sender].balance;\r\n    //     Wallets[msg.sender].balance = 0;\r\n    //     _to.transfer(_amount);\r\n    // }\r\n\r\n    // receive() external payable{\r\n    //     Wallets[msg.sender].balance += msg.value;\r\n    //     Wallets[msg.sender].nbPayements++;\r\n    // }\r\n\r\n    \r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/test.sol": {
				"test": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/test.sol\":111:1716  contract test {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/test.sol\":111:1716  contract test {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/test.sol\":858:867  msg.value */\n      callvalue\n        /* \"contracts/test.sol\":827:834  Wallets */\n      0x00\n        /* \"contracts/test.sol\":827:846  Wallets[msg.sender] */\n      dup1\n        /* \"contracts/test.sol\":835:845  msg.sender */\n      caller\n        /* \"contracts/test.sol\":827:846  Wallets[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/test.sol\":827:854  Wallets[msg.sender].montant */\n      0x00\n      add\n      0x00\n        /* \"contracts/test.sol\":827:867  Wallets[msg.sender].montant += msg.value */\n      dup3\n      dup3\n      sload\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/test.sol\":878:885  Wallets */\n      0x00\n        /* \"contracts/test.sol\":878:897  Wallets[msg.sender] */\n      dup1\n        /* \"contracts/test.sol\":886:896  msg.sender */\n      caller\n        /* \"contracts/test.sol\":878:897  Wallets[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/test.sol\":878:910  Wallets[msg.sender].nbDePayement */\n      0x01\n      add\n      0x00\n        /* \"contracts/test.sol\":878:912  Wallets[msg.sender].nbDePayement++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_7\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/test.sol\":111:1716  contract test {\r... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"#utility.yul\":7:312   */\n    tag_6:\n        /* \"#utility.yul\":47:50   */\n      0x00\n        /* \"#utility.yul\":66:86   */\n      tag_11\n        /* \"#utility.yul\":84:85   */\n      dup3\n        /* \"#utility.yul\":66:86   */\n      tag_12\n      jump\t// in\n    tag_11:\n        /* \"#utility.yul\":61:86   */\n      swap2\n      pop\n        /* \"#utility.yul\":100:120   */\n      tag_13\n        /* \"#utility.yul\":118:119   */\n      dup4\n        /* \"#utility.yul\":100:120   */\n      tag_12\n      jump\t// in\n    tag_13:\n        /* \"#utility.yul\":95:120   */\n      swap3\n      pop\n        /* \"#utility.yul\":254:255   */\n      dup3\n        /* \"#utility.yul\":186:252   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":182:256   */\n      sub\n        /* \"#utility.yul\":179:180   */\n      dup3\n        /* \"#utility.yul\":176:257   */\n      gt\n        /* \"#utility.yul\":173:280   */\n      iszero\n      tag_14\n      jumpi\n        /* \"#utility.yul\":260:278   */\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":173:280   */\n    tag_14:\n        /* \"#utility.yul\":304:305   */\n      dup3\n        /* \"#utility.yul\":301:302   */\n      dup3\n        /* \"#utility.yul\":297:306   */\n      add\n        /* \"#utility.yul\":290:306   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:312   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":318:395   */\n    tag_12:\n        /* \"#utility.yul\":355:362   */\n      0x00\n        /* \"#utility.yul\":384:389   */\n      dup2\n        /* \"#utility.yul\":373:389   */\n      swap1\n      pop\n        /* \"#utility.yul\":318:395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":401:634   */\n    tag_8:\n        /* \"#utility.yul\":440:443   */\n      0x00\n        /* \"#utility.yul\":463:487   */\n      tag_19\n        /* \"#utility.yul\":481:486   */\n      dup3\n        /* \"#utility.yul\":463:487   */\n      tag_12\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":454:487   */\n      swap2\n      pop\n        /* \"#utility.yul\":509:575   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":502:507   */\n      dup3\n        /* \"#utility.yul\":499:576   */\n      eq\n        /* \"#utility.yul\":496:599   */\n      iszero\n      tag_20\n      jumpi\n        /* \"#utility.yul\":579:597   */\n      tag_21\n      tag_16\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":496:599   */\n    tag_20:\n        /* \"#utility.yul\":626:627   */\n      0x01\n        /* \"#utility.yul\":619:624   */\n      dup3\n        /* \"#utility.yul\":615:628   */\n      add\n        /* \"#utility.yul\":608:628   */\n      swap1\n      pop\n        /* \"#utility.yul\":401:634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":640:820   */\n    tag_16:\n        /* \"#utility.yul\":688:765   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":685:686   */\n      0x00\n        /* \"#utility.yul\":678:766   */\n      mstore\n        /* \"#utility.yul\":785:789   */\n      0x11\n        /* \"#utility.yul\":782:783   */\n      0x04\n        /* \"#utility.yul\":775:790   */\n      mstore\n        /* \"#utility.yul\":809:813   */\n      0x24\n        /* \"#utility.yul\":806:807   */\n      0x00\n        /* \"#utility.yul\":799:814   */\n      revert\n\n    auxdata: 0xa2646970667358221220d760a140923756f391c367340d38af8ea672c064882a6e4ab98753400bbbb01b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101cd806100206000396000f3fe6080604052366100ba57346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461005a91906100bf565b925050819055506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008154809291906100b39061011f565b9190505550005b600080fd5b60006100ca82610115565b91506100d583610115565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561010a57610109610168565b5b828201905092915050565b6000819050919050565b600061012a82610115565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561015d5761015c610168565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220d760a140923756f391c367340d38af8ea672c064882a6e4ab98753400bbbb01b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CD DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0xBA JUMPI CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5A SWAP2 SWAP1 PUSH2 0xBF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB3 SWAP1 PUSH2 0x11F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCA DUP3 PUSH2 0x115 JUMP JUMPDEST SWAP2 POP PUSH2 0xD5 DUP4 PUSH2 0x115 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x10A JUMPI PUSH2 0x109 PUSH2 0x168 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A DUP3 PUSH2 0x115 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x15D JUMPI PUSH2 0x15C PUSH2 0x168 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 PUSH1 0xA1 BLOCKHASH SWAP3 CALLDATACOPY JUMP RETURN SWAP2 0xC3 PUSH8 0x340D38AF8EA672C0 PUSH5 0x882A6E4AB9 DUP8 MSTORE8 BLOCKHASH SIGNEXTEND 0xBB 0xB0 SHL PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "111:1605:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_31": {
									"entryPoint": null,
									"id": 31,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"checked_add_t_uint256": {
									"entryPoint": 191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 360,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:823:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "51:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "61:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "84:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "66:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "66:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "61:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "95:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "118:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "100:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "100:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "95:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "260:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "179:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "186:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "254:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "182:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "182:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "176:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "176:81:1"
															},
															"nodeType": "YulIf",
															"src": "173:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "290:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "301:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "304:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "297:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "297:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "290:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "38:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "41:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "47:3:1",
														"type": ""
													}
												],
												"src": "7:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "373:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "373:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "345:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "355:7:1",
														"type": ""
													}
												],
												"src": "318:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "444:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "454:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "481:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "463:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "463:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "454:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "577:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "579:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "579:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "579:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "502:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "509:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "499:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "499:77:1"
															},
															"nodeType": "YulIf",
															"src": "496:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "608:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "619:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "626:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "615:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "615:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "608:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "430:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "440:3:1",
														"type": ""
													}
												],
												"src": "401:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "668:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "685:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "688:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "678:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "678:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "678:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "782:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "785:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "775:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "775:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "775:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "806:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "809:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "799:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "799:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "799:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "640:180:1"
											}
										]
									},
									"contents": "{\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052366100ba57346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461005a91906100bf565b925050819055506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008154809291906100b39061011f565b9190505550005b600080fd5b60006100ca82610115565b91506100d583610115565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561010a57610109610168565b5b828201905092915050565b6000819050919050565b600061012a82610115565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561015d5761015c610168565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220d760a140923756f391c367340d38af8ea672c064882a6e4ab98753400bbbb01b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0xBA JUMPI CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5A SWAP2 SWAP1 PUSH2 0xBF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB3 SWAP1 PUSH2 0x11F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCA DUP3 PUSH2 0x115 JUMP JUMPDEST SWAP2 POP PUSH2 0xD5 DUP4 PUSH2 0x115 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x10A JUMPI PUSH2 0x109 PUSH2 0x168 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A DUP3 PUSH2 0x115 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x15D JUMPI PUSH2 0x15C PUSH2 0x168 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 PUSH1 0xA1 BLOCKHASH SWAP3 CALLDATACOPY JUMP RETURN SWAP2 0xC3 PUSH8 0x340D38AF8EA672C0 PUSH5 0x882A6E4AB9 DUP8 MSTORE8 BLOCKHASH SIGNEXTEND 0xBB 0xB0 SHL PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "111:1605:0:-:0;;;;;;858:9;827:7;:19;835:10;827:19;;;;;;;;;;;;;;;:27;;;:40;;;;;;;:::i;:::-;;;;;;;;878:7;:19;886:10;878:19;;;;;;;;;;;;;;;:32;;;:34;;;;;;;;;:::i;:::-;;;;;;111:1605;;;;;7:305:1;47:3;66:20;84:1;66:20;:::i;:::-;61:25;;100:20;118:1;100:20;:::i;:::-;95:25;;254:1;186:66;182:74;179:1;176:81;173:107;;;260:18;;:::i;:::-;173:107;304:1;301;297:9;290:16;;7:305;;;;:::o;318:77::-;355:7;384:5;373:16;;318:77;;;:::o;401:233::-;440:3;463:24;481:5;463:24;:::i;:::-;454:33;;509:66;502:5;499:77;496:103;;;579:18;;:::i;:::-;496:103;626:1;619:5;615:13;608:20;;401:233;;;:::o;640:180::-;688:77;685:1;678:88;785:4;782:1;775:15;809:4;806:1;799:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "92200",
								"executionCost": "141",
								"totalCost": "92341"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 111,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 111,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 111,
									"end": 1716,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 111,
									"end": 1716,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 111,
									"end": 1716,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 111,
									"end": 1716,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 111,
									"end": 1716,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 111,
									"end": 1716,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 111,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 111,
									"end": 1716,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 111,
									"end": 1716,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 111,
									"end": 1716,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 111,
									"end": 1716,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 111,
									"end": 1716,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 111,
									"end": 1716,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 1716,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 111,
									"end": 1716,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 111,
									"end": 1716,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 111,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 111,
									"end": 1716,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d760a140923756f391c367340d38af8ea672c064882a6e4ab98753400bbbb01b64736f6c63430008070033",
									".code": [
										{
											"begin": 111,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 111,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 111,
											"end": 1716,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 111,
											"end": 1716,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 111,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 111,
											"end": 1716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 858,
											"end": 867,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 827,
											"end": 834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 835,
											"end": 845,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 827,
											"end": 846,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 827,
											"end": 846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 827,
											"end": 846,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 827,
											"end": 846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 827,
											"end": 846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 827,
											"end": 846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 827,
											"end": 846,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 827,
											"end": 846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 827,
											"end": 846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 827,
											"end": 846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 827,
											"end": 846,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 827,
											"end": 846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 827,
											"end": 846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 846,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 867,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 827,
											"end": 867,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 827,
											"end": 867,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 827,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 827,
											"end": 867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 827,
											"end": 867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 827,
											"end": 867,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 827,
											"end": 867,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 827,
											"end": 867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 827,
											"end": 867,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 827,
											"end": 867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 827,
											"end": 867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 867,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 827,
											"end": 867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 896,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 878,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 878,
											"end": 897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 878,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 878,
											"end": 897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 878,
											"end": 897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 878,
											"end": 897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 878,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 878,
											"end": 897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 878,
											"end": 897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 878,
											"end": 897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 878,
											"end": 897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 878,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 878,
											"end": 897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 878,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 897,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 878,
											"end": 910,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 878,
											"end": 910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 878,
											"end": 910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 878,
											"end": 912,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 878,
											"end": 912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 878,
											"end": 912,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 878,
											"end": 912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 878,
											"end": 912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 878,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 878,
											"end": 912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 878,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 878,
											"end": 912,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 878,
											"end": 912,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 878,
											"end": 912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 878,
											"end": 912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 878,
											"end": 912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 878,
											"end": 912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 878,
											"end": 912,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 878,
											"end": 912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 111,
											"end": 1716,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 111,
											"end": 1716,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 111,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 111,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 111,
											"end": 1716,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7,
											"end": 312,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 7,
											"end": 312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 47,
											"end": 50,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 84,
											"end": 85,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 66,
											"end": 86,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 61,
											"end": 86,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 61,
											"end": 86,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 100,
											"end": 120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 118,
											"end": 119,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 100,
											"end": 120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 95,
											"end": 120,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 95,
											"end": 120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 254,
											"end": 255,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 186,
											"end": 252,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 182,
											"end": 256,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 179,
											"end": 180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 176,
											"end": 257,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 173,
											"end": 280,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 173,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 173,
											"end": 280,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 260,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 260,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 260,
											"end": 278,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 278,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 260,
											"end": 278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 173,
											"end": 280,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 173,
											"end": 280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 304,
											"end": 305,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 301,
											"end": 302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 297,
											"end": 306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 290,
											"end": 306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 290,
											"end": 306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 312,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 312,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 312,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 318,
											"end": 395,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 318,
											"end": 395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 355,
											"end": 362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 373,
											"end": 389,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 373,
											"end": 389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 318,
											"end": 395,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 318,
											"end": 395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 318,
											"end": 395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 318,
											"end": 395,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 401,
											"end": 634,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 401,
											"end": 634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 440,
											"end": 443,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 463,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 463,
											"end": 487,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 463,
											"end": 487,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 463,
											"end": 487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 454,
											"end": 487,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 454,
											"end": 487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 575,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 502,
											"end": 507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 499,
											"end": 576,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 496,
											"end": 599,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 496,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 599,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 579,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 579,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 579,
											"end": 597,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 579,
											"end": 597,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 579,
											"end": 597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 496,
											"end": 599,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 626,
											"end": 627,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 619,
											"end": 624,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 615,
											"end": 628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 608,
											"end": 628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 608,
											"end": 628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 401,
											"end": 634,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 634,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 401,
											"end": 634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 401,
											"end": 634,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 820,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 640,
											"end": 820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 688,
											"end": 765,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 685,
											"end": 686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 766,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 785,
											"end": 789,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 782,
											"end": 783,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 775,
											"end": 790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 809,
											"end": 813,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 806,
											"end": 807,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 799,
											"end": 814,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test.sol\":\"test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/test.sol\":{\"keccak256\":\"0x50dee4a8fa69782e31de15c44e0139391183d12583114c4a947a74d35e31625c\",\"urls\":[\"bzz-raw://4ae5fc6ada55965dc301f6c61695e248b445e7fe944deba06089b894f07fe591\",\"dweb:/ipfs/QmZXXzRedyWPiRs4hpfNXQ6PH7h7BpYNw4T8axmrpKtqSg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 11,
								"contract": "contracts/test.sol:test",
								"label": "Wallets",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(wallet)6_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(wallet)6_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct test.wallet)",
								"numberOfBytes": "32",
								"value": "t_struct(wallet)6_storage"
							},
							"t_struct(wallet)6_storage": {
								"encoding": "inplace",
								"label": "struct test.wallet",
								"members": [
									{
										"astId": 3,
										"contract": "contracts/test.sol:test",
										"label": "montant",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 5,
										"contract": "contracts/test.sol:test",
										"label": "nbDePayement",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/test.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/test.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/test.sol": {
				"ast": {
					"absolutePath": "contracts/test.sol",
					"exportedSymbols": {
						"test": [
							32
						]
					},
					"id": 33,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 32,
							"linearizedBaseContracts": [
								32
							],
							"name": "test",
							"nameLocation": "120:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "test.wallet",
									"id": 6,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "montant",
											"nameLocation": "517:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "512:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "512:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "nbDePayement",
											"nameLocation": "540:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "535:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "535:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "wallet",
									"nameLocation": "494:6:0",
									"nodeType": "StructDefinition",
									"scope": 32,
									"src": "487:88:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "Wallets",
									"nameLocation": "691:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 32,
									"src": "663:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6_storage_$",
										"typeString": "mapping(address => struct test.wallet)"
									},
									"typeName": {
										"id": 10,
										"keyType": {
											"id": 7,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "672:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "663:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6_storage_$",
											"typeString": "mapping(address => struct test.wallet)"
										},
										"valueType": {
											"id": 9,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 8,
												"name": "wallet",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 6,
												"src": "683:6:0"
											},
											"referencedDeclaration": 6,
											"src": "683:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_wallet_$6_storage_ptr",
												"typeString": "struct test.wallet"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "816:104:0",
										"statements": [
											{
												"expression": {
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 14,
																"name": "Wallets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "827:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6_storage_$",
																	"typeString": "mapping(address => struct test.wallet storage ref)"
																}
															},
															"id": 17,
															"indexExpression": {
																"expression": {
																	"id": 15,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "835:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "835:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "827:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_wallet_$6_storage",
																"typeString": "struct test.wallet storage ref"
															}
														},
														"id": 18,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "montant",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "827:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 19,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "858:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "858:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "827:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "827:40:0"
											},
											{
												"expression": {
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "878:34:0",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 23,
																"name": "Wallets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "878:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_wallet_$6_storage_$",
																	"typeString": "mapping(address => struct test.wallet storage ref)"
																}
															},
															"id": 26,
															"indexExpression": {
																"expression": {
																	"id": 24,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "886:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 25,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "886:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "878:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_wallet_$6_storage",
																"typeString": "struct test.wallet storage ref"
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "nbDePayement",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "878:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "878:34:0"
											}
										]
									},
									"id": 31,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "816:0:0"
									},
									"scope": 32,
									"src": "789:131:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 33,
							"src": "111:1605:0",
							"usedErrors": []
						}
					],
					"src": "0:1718:0"
				},
				"id": 0
			}
		}
	}
}