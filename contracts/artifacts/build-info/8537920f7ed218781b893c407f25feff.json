{
	"id": "8537920f7ed218781b893c407f25feff",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/test.sol": {
				"content": "pragma solidity 0.8.7;\r\n\r\n//Contrat de test de la vidéo Envoyer de l'ether sur un contrat msg.sender, msg.value\r\ncontract test {\r\n\r\n    address lastPerson; //La derniere  personne qui a envoyé de l'argent sur le smart contract\r\n    uint balance; //Montant envoyé sur le smart contract\r\n\r\n    //Permet d'envoyer de l'argent sur le smart contract\r\n    //Il ne peut y avoir qu'une seul fonction recieve par contrat \r\n    //payable indique qu'il va y avoir une variation d'argent\r\n    receive() external payable {\r\n        //Permet de recupérer la derniere personne qui a envoyé de l'argent\r\n        lastPerson = msg.sender;\r\n        \r\n        //Permet de récupérer le montant en Wei envoyé par l'user\r\n        balance = msg.value;\r\n    }\r\n\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/test.sol": {
				"test": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/test.sol\":114:747  contract test {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/test.sol\":114:747  contract test {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/test.sol\":614:624  msg.sender */\n      caller\n        /* \"contracts/test.sol\":601:611  lastPerson */\n      0x00\n      dup1\n        /* \"contracts/test.sol\":601:624  lastPerson = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/test.sol\":725:734  msg.value */\n      callvalue\n        /* \"contracts/test.sol\":715:722  balance */\n      0x01\n        /* \"contracts/test.sol\":715:734  balance = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/test.sol\":114:747  contract test {\r... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200857338446179ab74b7b86971fe156043cb4e1464be5d0bf7d418486cb79501f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50608c8061001e6000396000f3fe608060405236605157336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600181905550005b600080fdfea26469706673582212200857338446179ab74b7b86971fe156043cb4e1464be5d0bf7d418486cb79501f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8C DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x51 JUMPI CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD JUMPI CALLER DUP5 CHAINID OR SWAP11 0xB7 0x4B PUSH28 0x86971FE156043CB4E1464BE5D0BF7D418486CB79501F64736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "114:633:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_19": {
									"entryPoint": null,
									"id": 19,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405236605157336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600181905550005b600080fdfea26469706673582212200857338446179ab74b7b86971fe156043cb4e1464be5d0bf7d418486cb79501f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x51 JUMPI CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD JUMPI CALLER DUP5 CHAINID OR SWAP11 0xB7 0x4B PUSH28 0x86971FE156043CB4E1464BE5D0BF7D418486CB79501F64736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "114:633:0:-:0;;;;;;614:10;601;;:23;;;;;;;;;;;;;;;;;;725:9;715:7;:19;;;;114:633;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "28000",
								"executionCost": "81",
								"totalCost": "28081"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 114,
									"end": 747,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 114,
									"end": 747,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 114,
									"end": 747,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 114,
									"end": 747,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 114,
									"end": 747,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 114,
									"end": 747,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 114,
									"end": 747,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 114,
									"end": 747,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 114,
									"end": 747,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 747,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 114,
									"end": 747,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 114,
									"end": 747,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 114,
									"end": 747,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 114,
									"end": 747,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 114,
									"end": 747,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 747,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 114,
									"end": 747,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 747,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 747,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 114,
									"end": 747,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 747,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200857338446179ab74b7b86971fe156043cb4e1464be5d0bf7d418486cb79501f64736f6c63430008070033",
									".code": [
										{
											"begin": 114,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 114,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 114,
											"end": 747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 114,
											"end": 747,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 114,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 614,
											"end": 624,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 601,
											"end": 611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 601,
											"end": 624,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 601,
											"end": 624,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 601,
											"end": 624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 601,
											"end": 624,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 601,
											"end": 624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 601,
											"end": 624,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 601,
											"end": 624,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 601,
											"end": 624,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 601,
											"end": 624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 601,
											"end": 624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 601,
											"end": 624,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 601,
											"end": 624,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 601,
											"end": 624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 601,
											"end": 624,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 601,
											"end": 624,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 601,
											"end": 624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 601,
											"end": 624,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 601,
											"end": 624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 725,
											"end": 734,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 715,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 715,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 715,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 715,
											"end": 734,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 715,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 114,
											"end": 747,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 114,
											"end": 747,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 114,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 114,
											"end": 747,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test.sol\":\"test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/test.sol\":{\"keccak256\":\"0x0ed56af4ec6bd738e860f2b627996fea743bc07ffe49e0dbfcdba1d9a8102b92\",\"urls\":[\"bzz-raw://df97865825a4cc323ddeb699f2113e5e6a35eeb7ce1280c5f153ecea5abbed90\",\"dweb:/ipfs/QmPP8AivLAHoU81CGXBwFD2GF8z9RmavnkHjWX8Ru4pjfv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/test.sol:test",
								"label": "lastPerson",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "contracts/test.sol:test",
								"label": "balance",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/test.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/test.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/test.sol": {
				"ast": {
					"absolutePath": "contracts/test.sol",
					"exportedSymbols": {
						"test": [
							20
						]
					},
					"id": 21,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 20,
							"linearizedBaseContracts": [
								20
							],
							"name": "test",
							"nameLocation": "123:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "lastPerson",
									"nameLocation": "145:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 20,
									"src": "137:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "137:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "balance",
									"nameLocation": "239:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 20,
									"src": "234:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "234:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "511:231:0",
										"statements": [
											{
												"expression": {
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 8,
														"name": "lastPerson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "601:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 9,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "614:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 10,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "614:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "601:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 12,
												"nodeType": "ExpressionStatement",
												"src": "601:23:0"
											},
											{
												"expression": {
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "715:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 14,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "725:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "725:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "715:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 17,
												"nodeType": "ExpressionStatement",
												"src": "715:19:0"
											}
										]
									},
									"id": 19,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "491:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:0:0"
									},
									"scope": 20,
									"src": "484:258:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 21,
							"src": "114:633:0",
							"usedErrors": []
						}
					],
					"src": "0:749:0"
				},
				"id": 0
			}
		}
	}
}